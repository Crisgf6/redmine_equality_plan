<h2><%= l(:label_gender_statistics) %></h2>

<div class="splitcontent">
  <div class="splitcontentright">
  <%= male_users = User.male
  female_users = User.female
  render 'partials/count_table', {male_users: male_users, female_users: female_users}%>

  <br><br>

  <%= users = User.andy.all
  render 'partials/andy_users', {users: users}%>

  </div>

  <div class="splitcontentleft">
    <%= render 'partials/count_pie_chart', {male_users: male_users, female_users: female_users}%>
  </div>

</div>

<div class="splitcontent">
    <%= male_users_count = GenderStory.all.map(&:male_count)
    female_users_count = GenderStory.all.map(&:female_count)
    render 'partials/count_year_barChart', {male_users_count: male_users_count, female_users_count: female_users_count, months: @months}%>
</div>

<h2><%= l(:label_group_statistics) %></h2>

<div class="splitcontent">
  <div class="splitcontentleft">
    <%= render 'partials/gender_group_users' %>
  </div>

  <div class="splitcontentright">
    <%
      groups = Group.left_joins(:users).group(:id).order('COUNT(users.id) DESC').limit(10)
      female_pertcentage = groups.map {|group| (group.users.female.count.to_f/group.users.count*100).round(2) }
      male_pertcentage = groups.map {|group| (group.users.male.count.to_f/group.users.count*100).round(2) } %>
      <%= render 'partials/count_gender_group_users_barChart', {female_pertcentage: female_pertcentage, male_pertcentage: male_pertcentage, groups_min: groups}%>
  </div>
</div>

<%
  # Trabajadores por edad

  ages = ['16-19', '20-29', '30-39', '40-49', '50-59', '60-80']

  female_age_ranges = [User.for_age_range(16, 19).female.size,
                       User.for_age_range(20, 29).female.size,
                       User.for_age_range(30, 39).female.size,
                       User.for_age_range(40, 49).female.size,
                       User.for_age_range(50, 59).female.size,
                       User.for_age_range(60, 80).female.size]

  male_age_ranges = [User.for_age_range(16, 19).male.size,
                     User.for_age_range(20, 29).male.size,
                     User.for_age_range(30, 39).male.size,
                     User.for_age_range(40, 49).male.size,
                     User.for_age_range(50, 59).male.size,
                     User.for_age_range(60, 80).male.size]
%>

<div class="splitcontent">
  <div class="splitcontentleft">
    <h2><%= l(:label_age_and_gender) %></h2>

    <canvas id="genderAgeChart" width="100" height="100"></canvas>
  </div>
  <div class="splitcontentright">
  </div>
</div>

<div class="splitcontent">
  <div class="splitcontentleft">
    <h2><%= l(:label_females_contract_type) %></h2>
    <canvas id="contractTypesFemaleChart" width="100" height="100"></canvas>
  </div>
  <div class="splitcontentright">
    <h2><%= l(:label_males_contract_type) %></h2>
    <canvas id="contractTypesMaleChart" width="100" height="100"></canvas>
  </div>
</div>

<script>

  function manage(user) {
    var id = user.id;
    var gender = $('#gender_'+(id)).val();
    console.log(gender);

    $.ajax({
       url: "/equality_plans_manage",
       data: new URLSearchParams({'id': id, 'gender': gender}).toString()
    })
  };

  var ageBarChartData = {
    labels: <%= raw ages %>,
    datasets: [{
      label: '<%= l(:label_female) %>',
      backgroundColor: '#FF333F',
      borderColor: '#FF333F',
      borderWidth: 1,
      data: <%= female_age_ranges %>
    }, {
      label: '<%= l(:label_male) %>',
      backgroundColor: '#4633FF',
      borderColor: '#4633FF',
      data: <%= male_age_ranges %>
    }]

  };
  var ctxAgeChart = document.getElementById('genderAgeChart').getContext('2d');
			window.myHorizontalBar = new Chart(ctxAgeChart, {
				type: 'horizontalBar',
				data: ageBarChartData,
				options: {
					// Elements options apply to all of the options unless overridden in a dataset
					// In this case, we are setting the border of each horizontal bar to be 2px wide
					elements: {
						rectangle: {
							borderWidth: 2,
						}
					},
					responsive: true,
					legend: {
						position: 'right',
					},
					title: {
						display: true,
						text: 'Age ranges Bar Chart'
					}
				}
			});

  var ctxContractTypesFemaleChart = document.getElementById('contractTypesFemaleChart').getContext('2d');

  data = {
      datasets: [{
          data: <%= raw User.custom_contract_types(User.female).values %>,
          backgroundColor: ['#FF333F','#4633FF']
      }],
      // These labels appear in the legend and in the tooltips when hovering different arcs
      labels: <%= raw User.custom_contract_types(User.female).keys %>
  };

  var myPieChart = new Chart(ctxContractTypesFemaleChart, {
      type: 'pie',
      data: data,
      options: {
          elements: {
            rectangle: {borderWidth: 2}
          },
          responsive: true,
          legend: {position: 'right'},
          title: {
            display: true,
            text: '<%= l(:label_females_contract_type) %>'
          }
        }
  });

  var ctxContractTypesMaleChart = document.getElementById('contractTypesMaleChart').getContext('2d');

  data = {
      datasets: [{
          data: <%= raw User.custom_contract_types(User.male).values %>,
          backgroundColor: ['#FF333F','#4633FF']
      }],
      // These labels appear in the legend and in the tooltips when hovering different arcs
      labels: <%= raw User.custom_contract_types(User.male).keys %>
  };

  var myPieChart = new Chart(ctxContractTypesMaleChart, {
      type: 'pie',
      data: data,
      options: {
          elements: {
            rectangle: {borderWidth: 2}
          },
          responsive: true,
          legend: {position: 'right'},
          title: {
            display: true,
            text: '<%= l(:label_males_contract_type) %>'
          }
        }
  });


</script>

<% content_for :header_tags do %>
  <%= javascript_include_tag "Chart.bundle.min" %>
<% end %>
